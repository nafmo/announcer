; ANNOUNCE.INI
; Announcer configuration file sample, normal mode

; Announcer v1.2
; (c) Copyright 1995,1996,1997 Peter Karlsson
; A Softwolves Software release in 1997

; Please note that the case is not of importance in any of the configuration
; items. There may only be one space between the keyword and the setting.

; For an example on how to use the .PKT mode, see PKTMODE.INI.


; ============================================================================
; Global settings
; ============================================================================

; LogFile
; Enables logging of what happens to a file.

LogFile ANNOUNCE.LOG

; EchoTossLog
; If you have many echomail areas, the use of an ECHOTOSS.LOG file is
; recommended. In this file, the names of the echomail areas which have new
; messages are written. To let Announcer create/add to an ECHOTOSS.LOG file,
; you must enable this configuration item, and use the Echo settings in the
; message templates.

EchoTossLog C:\SQUISH\ECHOTOSS.LOG

; JamTossLog
; If you have many JAM areas, the use of the ECHOMAIL.JAM/NETMAIL.JAM is
; recommended. This file works like the ECHOTOSS.LOG described above, but
; is for JAM areas only. It does not require the Echo setting in the
; message templates, however.

;JamTossLog C:\FASTECHO\

; TaglineFile
; Sets the name of the file containing taglines (if any), from which random
; taglines can be selected. If no file is configured, random taglines can not
; be used.

TaglineFile D:\TAGLINE\TAGLINES.TXT

; TaglineIntro
; Sets the characters that starts taglines. This defaults "...".
; This entry is three characters wide.

TaglineIntro ...

; BraglineIntro
; Sets the characters that starts braglines (product ID). This defaults to
; "---" (a Fidonet tear line). If you use Announcer in echomail areas, and
; your tosser re-tears outgoing messages, you could change this to "___" or
; similar.
; This entry is three characters wide.
; Brag lines are not used in PID mode.

Braglineintro ---

; MsgId
; Sets the ID to use in MSGID kludges of *local* messages. There is no default,
; if no MsgId is specified, no MSGID kludges will be generated in local
; messages. In netmail and echomail, MSGID kludges are *always* generated, and
; will use the originating address of that message.
; Maximum is 32 characters.

MsgId 2:206/221.0

; ReplyKludge
; Sets whether Announcer should use REPLY kludges or not. REPLY kludges are
; never used in mailing lists.

ReplyKludge Yes

; SquishCfg
; Makes Announcer read a SquishMail 1.11 configuration.

SquishCfg C:\SQUISH\SQUISH.CFG

; FMailCfg
; Makes Announcer read a FMail 1.22 configuration.

;FMailCfg C:\FMAIL\FMAIL.CFG

; GEchoCfg
; Makes Announcer read a GEcho 1.20 configuration.

;GEchoCfg C:\GECHO\GECHO.CFG

; TerMailCfg
; Makes Announcer read a TerMail configuration.

;TerMailCfg C:\TERMINAT\TERMAIL\TM.CFG

; IdServer
; Lets Announcer use an IDSERVER file for MSGID creation.

IdServer C:\

; NetMailTearLine
; Tells whether you want Announcer to create tearlines in netmail messages
; or not

NetMailTearLine Yes


; ============================================================================
; Message templates
; ============================================================================

; The message templates have this format, the order between the keywords are
; not important. The only mandatory keywords are FROM, SUBJECT, FILE, and
; PATH.

; MSG
; FROM <name of sender>
; TO <name of receiver>                                         (*3)
; SUBJECT <subject line>
; FILE <file to be posted>
; PATH <path to message base>                                   (*1)
; PRIVATE <private flag: Yes/No>                                (*2)
; ATTRIBUTE <message attributes: C,K,A,R,P>                     (*3,*2)
; TAGLINE <tagline to use or "@" for random choice>             (*3)
; DISTRIBUTION <distribution mode: Local/Echomail/Netmail>      (*4)
; ORIG <originating address>                                    (*5)
; DEST <destination address>                                    (*6)
; ORIGIN <origin line>                                          (*5)
; INTERVAL <interval in days between postings>                  (*3)
; ECHO <echotag>                                                (*7)
; HEADER <name of header file>                                  (*3)
; FOOTER <name of footer file>                                  (*3)
; SEMAPHORE <name of semaphore file needed>                     (*3)
; CREATE <name of semaphore file to create>                     (*3)
; SPLIT <number of times to split the message>                  (*3)
; MINSIZE <minimum size in bytes>                               (*3)
; CHARSET <character set to post in: PC8/SV7/ISO/ASCII>         (*3)
; UPDATEDSEND <should it only be sent if updated: Yes/No>       (*3)
; FIXEDWIDTH <show message with a monospace font: Yes/No>       (*8)
; .END
;
; You can use the %1 - %10 special parameters with ANY of the keywords above,
; see the documentation for details.
;
; (*1) The message base path is given on this form:
;       Squish: Spath       (sample: SC:\Max\Msg\Muffin)
;       Hudson: H###path    (sample: H007C:\Quick\Msgbase)
;       FTS:    Fpath       (sample: FD:\FD\Mail\)
;       JAM:    Jpath       (sample: JC:\RA2\MSG\RA_UTIL)
;       EzyCom: E####path   (sample: E0001F:\EZY\MSG)
;        ### and #### are area numbers, in the case they exist.
;
; (*2) Controls message private status, only used with local messages.
;      (netmail are always private, echomail are never private).
;
; (*3) Optional.
;
; (*4) If not specified it defaults to a local message.
;
; (*5) Only used in echomail (ORIG also in netmail).
;
; (*6) Only used in netmail.
;
; (*7) Optional in normal mode, used for EchoTossLog.
;
; (*8) Not supported by all programs.


; ============================================================================

; Sample message templates

; #1 - Will post the Announcer documentation in a local Squish type area,
;      split into 10 parts, and telling the reader to show it in monospace.

MSG
From Peter Karlsson
To You
Subject Announcer documentation
Path Sc:\squish\localmsg
; Random tagline:
Tagline @
Distribution Local
Private No
File announce.doc
Split 10
FixedWidth Yes
.END

; ============================================================================

; #2 - Will post a welcoming message to a new user on the BBS in a JAM style
;      netmail area, using the ISO 8859-1 character set.

MSG
File Newuser.txt
Subject Welcome new user!
; Will use the first name on the command line on the To-line, see the
; documentation for details:
To %1
From Peter Karlsson
Path Jc:\jam\newusers
Tagline Welcome to my BBS!
Distribution NetMail
Orig 1:234/567.8
Dest 2:345/678.9
Charset ISO
.end

; ============================================================================

; #3 - Will post echo rules every 21 days to an FTS (*.MSG) style area,
;      split to two messages.

MSG
From Moderator
To All
Subject WILDERBEEST echo rules
Header header.txt
File wilder.rul
Footer footer.txt
Path Fc:\fido\wildrbst
Distribution EchoMail
Orig 1:234/567.8
Echo WILDERBEEST
Origin The information super highway
Tagline @
Interval 21
Split 2
.end

; ============================================================================

; #4 - Will create a file request for 'THISWEEK.TXT' from 2:299/99 once every
;      week in a Hudson style netmail area.

MSG
From Announcer
Orig 2:206/221
Dest 2:299/99
Subject THISWEEK.TXT
Path H001C:\Quick\MsgBase
Distribution NetMail
; R = File Request:
Attributes R
; For File Request, it is best to leave the body empty, so create a zerobyte
; file:
File Zero.Txt
.end

; ============================================================================

; You can use global configurations in-between to change settings
; "on-the-fly". This will make sure the following templates won't use a
; REPLY kludge

ReplyKludge No

; ============================================================================

; #5 - This will use the read tosser configuration to find the area
;      BBSAD, in which it will post a BBS advertisment

MSG
From Sysop
To All
Subject Call my BBS!
Echo BBSAD
File bbsad.txt
.end

; ============================================================================

; End of sample ANNOUNCE.INI
